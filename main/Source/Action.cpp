//==============================================================================
// Copyright Â© 2019 Sparkwing
//==============================================================================
#include "Action.hpp"

#include <cstdlib>
#include <cstring>
//==============================================================================
// Private defines and constants
//==============================================================================

//==============================================================================
// Private typedefs
//==============================================================================

//==============================================================================
// Private variables
//==============================================================================

//==============================================================================
// Private function definitions
//==============================================================================

//==============================================================================
// Public function definitions
//==============================================================================

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
Action::Source Action::GetSource() const
{
    return mSource;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Action::SetSource(Action::Source source)
{
    mSource = source;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
bool Action::GetIsUpdate() const
{
    return mIsUpdate;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Action::SetIsUpdate(bool update)
{
    mIsUpdate = update;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Action::SetSequenceNumber(uint32_t sn)
{
    mSequenceNumber = sn;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
uint32_t Action::GetSequenceNumber() const
{
    return mSequenceNumber;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Action::ReleaseResources()
{
    if ((mAllocatedResources != nullptr) && !mAllocatedResources->empty())
    {
        for (auto item = mAllocatedResources->begin();
             item != mAllocatedResources->end();
             ++item)
        {
            free(*item);
        }
    }
    delete mAllocatedResources;
    mAllocatedResources = nullptr;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Action::AddAllocatedResource(void *resource)
{
    if (mAllocatedResources == nullptr)
    {
        mAllocatedResources = new std::list<void *>;
    }

    mAllocatedResources->push_back(resource);
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
char *Action::AddAllocatedStringResource(const char *source)
{
    char *dest{""};
    if (source != nullptr)
    {
        dest = reinterpret_cast<char *>(malloc(strlen(source) + 1));
        if (dest)
        {
            strcpy(dest, source);
            AddAllocatedResource(dest);
        }
    }
    return dest;
}
